---
title: "SLR: Model assessment cont'd"
author: "Prof. Maria Tackett"
date: "2024-09-05"
date-format: "MMM DD, YYYY"
footer: "[ðŸ”— STA 221 - Fall 2024](https://sta221-fa24.netlify.app)"
logo: "../images/logo.png"
format: 
  revealjs:
    theme: slides.scss
    multiplex: false
    transition: fade
    slide-number: true
    incremental: false 
    chalkboard: true
html-math-method:
  method: mathjax
  url: "https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"
execute:
  freeze: auto
  echo: true
knitr:
  opts_chunk: 
    R.options:      
    width: 200
bibliography: references.bib
---

```{r setup}
#| include: false

library(countdown)

knitr::opts_chunk$set(
  fig.width = 8,
  fig.asp = 0.618,
  fig.retina = 3,
  dpi = 300,
  out.width = "80%",
  fig.align = "center"
)
```

## Announcements {.midi}

-   Office hours start this week. See schedule on [Overview page](https://sta221-fa24.netlify.app/overview) of the course website or on [Canvas](https://canvas.duke.edu/courses/38867).
-   Labs resume Monday, September 09

# Questions from last class?

## Topics

-   Evaluate models using RMSE and $R^2$
-   Use analysis of variance to partition variability in the response variable

## Computing set up

```{r packages}
#| echo: true
#| message: false

# load packages
library(tidyverse)   # for data wrangling and visualization
library(tidymodels)  # for modeling (includes broom, yardstick, and other packages)
library(openintro)   # for the duke_forest dataset
library(scales)      # for pretty axis labels
library(knitr)       # for pretty tables
library(patchwork)   # arrange plots

# set default theme for ggplot2
ggplot2::theme_set(ggplot2::theme_bw())
```

## Data: Houses in Duke Forest

::: columns
::: {.column width="50%"}
-   Data on houses that were sold in the Duke Forest neighborhood of Durham, NC around November 2020
-   Scraped from Zillow
-   Source: [`openintro::duke_forest`](http://openintrostat.github.io/openintro/reference/duke_forest.html)
:::

::: {.column width="50%"}
![](images/03/duke_forest_home.jpg){fig-alt="Home in Duke Forest"}
:::
:::

**Goal**: Use the area (in square feet) to understand variability in the price of houses in Duke Forest.

```{r}
#| include: false


duke_forest_fit <- lm(price ~ area, data = duke_forest)
duke_forest_aug <- augment(duke_forest_fit)
```

## Regression model

```{r}
duke_forest_fit <- lm(price ~ area, data = duke_forest)

tidy(duke_forest_fit) |>
  kable(digits = 3)
```

<br>

<center><b>We fit a model but is it any good?</b></center>

## Two statistics

-   **Root mean square error, RMSE**: A measure of the average error (average difference between observed and predicted values of the outcome)

-   **R-squared**, $R^2$ : Percentage of variability in the outcome explained by the regression model (in the context of SLR, the predictor)

## RMSE

$$
RMSE = \sqrt{\frac{\sum_{i=1}^n(y_i - \hat{y}_i)^2}{n}} = \sqrt{\frac{\sum_{i=1}^ne_i^2}{n}}
$$

<br>

-   Ranges between 0 (perfect predictor) and infinity (terrible predictor)

-   Same units as the response variable

-   The value of RMSE is more useful for comparing across models than evaluating a single model (more on this when we get to regression with multiple predictors)

# ANOVA and $R^2$

## ANOVA {#analysis-of-variance-anova}

**Analysis of Variance (ANOVA)**: Technique to partition variability in $Y$ by the sources of variability

<br>

![](images/clipboard-3964457409.png)

## Total variability (Response)

```{r}
#| echo: false
#| fig-width: 10

ggplot(data = duke_forest, aes(x = price)) +
   geom_histogram(fill = "#407E99", color = "black") + 
  labs(x = "Price (in US Dollars)") + 
  scale_x_continuous(labels = label_dollar(scale_cut = cut_long_scale()))

```

::: question
**Goal**: Quantify how much variability in `price` is accounted for by the model (`area`) and how much accounted for by factors not included in the model.
:::

## Partition variability in `price`

For now, let's focus on two observations

```{r}
#| echo: false

focus_add <- c("2832 Mcdowell Rd, Durham, NC 27705", 
               "1803 Woodburn Rd, Durham, NC 27705")

duke_forest <- duke_forest |>
  mutate(focus_obs = if_else(address %in% focus_add, "1", "0"))

mean_y <- mean(duke_forest$price)

ggplot(data = duke_forest, aes(x = area, y = price, color = focus_obs, size = focus_obs)) +
  geom_point(alpha = 0.5) + 
  geom_hline(yintercept = mean_y, color = "#407E99") +
  labs(x = "Area (in sqft)",
       y = "Price (in USD)") +
  annotate("text", x = 6200, y = 500000, label = latex2exp::TeX("$\\bar{y}$"), color = "#407E99", size = 6) + 
  scale_y_continuous(labels = label_dollar(scale_cut = cut_long_scale())) +
  scale_color_manual(values = c("1" = "black", "0" = "lightgray")) + 
  scale_size_discrete(range = c(1, 3)) +
  theme(legend.position="none")
```

## Total variability (Response)

```{r}
#| echo: false
mean_y <- mean(duke_forest$price)

ggplot(data = duke_forest, aes(x = area, y = price, color = focus_obs, size = focus_obs)) +
  geom_point(alpha = 0.5) + 
  geom_hline(yintercept = mean_y, color = "#407E99") +
  geom_segment(aes(x =area[focus_obs == 1][1], xend= area[focus_obs == 1][1], y=price[focus_obs == 1][1], yend=mean_y), color = "#407E99", linewidth = 1) + 
  geom_segment(aes(x =area[focus_obs == 1][2], xend= area[focus_obs == 1][2], y=price[focus_obs == 1][2], yend=mean_y), color = "#407E99", linewidth = 1) +
  labs(x = "Area (in sqft)",
       y = "Price (in USD)") +
  annotate("text", x = 6200, y = 500000, label = latex2exp::TeX("$\\bar{y}$"), color = "#407E99", size = 6) + 
  scale_y_continuous(labels = label_dollar(scale_cut = cut_long_scale())) +
  scale_color_manual(values = c("1" = "black", "0" = "lightgray")) + 
  scale_size_discrete(range = c(1, 3)) +
  theme(legend.position="none")
```

$$\text{Sum of Squares Total (SST)} = \sum_{i=1}^n(y_i - \bar{y})^2 = (n-1)s_y^2$$

## Explained variability (Model)

```{r}
#| echo: false
mean_y <- mean(duke_forest$price)
focus_obs_area <- duke_forest |> filter(focus_obs == 1) |> select(area) |> pull()
focus_obs_price <- duke_forest |> filter(focus_obs == 1) |> select(price) |> pull()
focus_obs_predict <- predict(duke_forest_fit, duke_forest[duke_forest$focus_obs == "1", ])

ggplot(data = duke_forest, aes(x = area, y = price)) +
  geom_point(alpha = 0.5, aes(size = focus_obs, color = focus_obs)) + 
  geom_hline(yintercept = mean_y, color = "#407E99") +
  geom_smooth(method = "lm", se = FALSE, color = "#993399") +
  annotate("pointrange", x = focus_obs_area[1], y = focus_obs_predict[1] ,xmin = focus_obs_area[1], xmax= focus_obs_area[1], ymin = mean_y, ymax=focus_obs_predict[1],  color = "#993399", linewidth = 1, size = 0.25) +
  annotate("pointrange", x = focus_obs_area[2], y = focus_obs_predict[2], xmin = focus_obs_area[2], xmax= focus_obs_area[2], ymin = mean_y, ymax=focus_obs_predict[2],  color = "#993399", linewidth = 1, size = 0.25) +
  labs(x = "Area (in sqft)",
       y = "Price (in USD)") +
  annotate("text", x = 6000, y = 475000, label = latex2exp::TeX("$\\bar{y}$"), color = "#407E99", size = 6) + 
  annotate("text", x = 6000, y = 1200000, label = latex2exp::TeX("$\\hat{\\mu}_y$"), color = "#993399", size = 6) +
  scale_y_continuous(labels = label_dollar(scale_cut = cut_long_scale())) +
  scale_color_manual(values = c("1" = "black", "0" = "lightgray")) + 
  scale_size_discrete(range = c(1, 3)) +
  theme(legend.position="none")
```

$$\text{Sum of Squares Model (SSM)} = \sum_{i = 1}^{n}(\hat{y}_i - \bar{y})^2$$

------------------------------------------------------------------------

## Unexplained variability (Residuals)

```{r}
#| echo: false
ggplot(data = duke_forest, aes(x = area, y = price)) +
  geom_point(alpha = 0.5, aes(size = focus_obs, color = focus_obs)) + 
  geom_hline(yintercept = mean_y, color = "#407E99") +
  geom_smooth(method = "lm", se = FALSE, color = "#993399") +
  annotate("pointrange", x = focus_obs_area[1], y = focus_obs_price[1] ,xmin = focus_obs_area[1], xmax= focus_obs_area[1], ymin = focus_obs_predict[1], ymax=focus_obs_price[1],  color = "#8BB174", linewidth = 1, size = 0.25) +
  annotate("pointrange", x = focus_obs_area[2], y = focus_obs_price[2], xmin = focus_obs_area[2], xmax= focus_obs_area[2], ymin = focus_obs_price[2], ymax=focus_obs_predict[2],  color = "#8BB174", linewidth = 1, size = 0.25) +
  labs(x = "Area (in sqft)",
       y = "Price (in USD)") +
  annotate("text", x = 6000, y = 475000, label = latex2exp::TeX("$\\bar{y}$"), color = "#407E99", size = 6) + 
  annotate("text", x = 6000, y = 1200000, label = latex2exp::TeX("$\\hat{\\mu}_y$"), color = "#993399", size = 6) +
  scale_y_continuous(labels = label_dollar(scale_cut = cut_long_scale())) +
  scale_color_manual(values = c("1" = "black", "0" = "lightgray")) + 
  scale_size_discrete(range = c(1, 3)) +
  theme(legend.position="none")
```

$$\text{Sum of Squares Residuals (SSR)} = \sum_{i = 1}^{n}(y_i - \hat{y}_i)^2$$

## Sum of Squares

<br>

$$
\begin{aligned}
\color{#407E99}{SST} \hspace{5mm}&= &\color{#993399}{SSM} &\hspace{5mm} +  &\color{#8BB174}{SSR} \\[10pt]
\color{#407E99}{\sum_{i=1}^n(y_i - \bar{y})^2} \hspace{5mm}&= &\color{#993399}{\sum_{i = 1}^{n}(\hat{y}_i - \bar{y})^2} &\hspace{5mm}+ &\color{#8BB174}{\sum_{i = 1}^{n}(y_i - \hat{y}_i)^2}
\end{aligned}
$$

<br>

::: callout-note
See [Sum of Squares](https://introregression.netlify.app/98-appendix#sum-of-squares) for mathematical details showing $SST = SSM + SSR$.
:::

## $R^2$

The **coefficient of determination** $R^2$ is the proportion of variation in the response, $Y$, that is explained by the regression model

<br>

$$\large{R^2 = \frac{SSM}{SST} = 1 - \frac{SSR}{SST}}$$

<br>

::: question
What is the range of $R^2$? Does $R^2$ have units?
:::

## Interpreting \$R\^2\$ {.smaller}

```{r}
#| echo: false

df_fit_rsq <- round(glance(duke_forest_fit)$r.squared, 3) * 100

```

::: panel-tabset
## Question

::: appex
Submit your response to the following question on Ed Discussion.

::: midi
The $R^2$ of the model for price from area of houses in Duke Forest is `r df_fit_rsq`%. Which of the following is the correct interpretation of this value?

1.  Area correctly predicts `r df_fit_rsq`% of price for houses in Duke Forest.
2.  `r df_fit_rsq`% of the variability in price for houses in Duke Forest can be explained by area.
3.  `r df_fit_rsq`% of the variability in area for houses in Duke Forest can be explained by price.
4.  `r df_fit_rsq`% of the time price for houses in Duke Forest can be predicted by area.

Do you think this model is useful for explaining variability in the price of Duke Forest houses?
:::
:::

## Submit

```{=html}
<iframe allowfullscreen frameborder="0" height="100%" mozallowfullscreen style="min-width: 500px; min-height: 355px" src="https://edstem.org/us/courses/62513/discussion/629888" width="100%"></iframe>
```
:::

ðŸ”— <https://edstem.org/us/courses/62513/discussion/629888>

# Using R

## Augmented data frame

Use the `augment()` function from the **broom** package (part of **tidymodels**) to add columns for predicted values, residuals, and other observation-level model statistics

. . .

```{r}
duke_forest_aug <- augment(duke_forest_fit)
duke_forest_aug
```

## Finding RMSE in R

Use the `rmse()` function from the **yardstick** package (part of **tidymodels**)

```{r}
#| echo: true
rmse(duke_forest_aug, truth = price, estimate = .fitted)
```

<br>

::: question
What does this value mean?
:::

## Finding $R^2$ in R

Use the `rsq()` function from the **yardstick** package (part of **tidymodels**)

```{r}
#| echo: true
rsq(duke_forest_aug, truth = price, estimate = .fitted)
```

<br>

. . .

Alternatively, use `glance()` to construct a single row summary of the model fit, including $R^2$

```{r}
#| echo: true

glance(duke_forest_fit)$r.squared
```

## Recap

-   Evaluated models using RMSE and $R^2$

-   Used analysis of variance to partition variability in the response variable
