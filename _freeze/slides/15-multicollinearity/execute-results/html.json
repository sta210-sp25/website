{
  "hash": "bc496b917c4fde7f079c10d3367ac0a4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Multicollinearity + Variable transformations\"\nauthor: \"Prof. Maria Tackett\"\ndate: \"2024-10-22\"\ndate-format: \"MMM DD, YYYY\"\nfooter: \"[üîó STA 221 - Fall 2024](https://sta221-fa24.netlify.app)\"\nlogo: \"../images/logo.png\"\nformat: \n  revealjs:\n    theme: slides.scss\n    multiplex: false\n    transition: fade\n    slide-number: true\n    incremental: false \n    chalkboard: true\n    include-before: [ '<script type=\"text/x-mathjax-config\">MathJax.Hub.Config({tex2jax: {enableAssistiveMml: false}});</script>']\nhtml-math-method:\n  method: mathjax\n  url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\nexecute:\n  freeze: auto\n  echo: true\nknitr:\n  opts_chunk: \n    R.options:      \n    width: 200\nfilters:\n  - parse-latex\nbibliography: references.bib\n---\n\n\n\n## Announcements\n\n-   Exam corrections (optional) due Thursday at 11:59pm [on Canvas](https://canvas.duke.edu/courses/38867/assignments/169519)\n\n-   Lab 04 due Thursday at 11:59pm\n\n-   Team Feedback (from TEAMMATES) due Thursday at 11:59pm\n\n-   [Mid semester survey](https://duke.qualtrics.com/jfe/form/SV_244HYi8U8X85pgW) (strongly encouraged!) by Thursday at 11:59pm\n\n-   Looking ahead\n\n    -   Project: Exploratory data analysis due October 31\n\n    -   Statistics experience due Tuesday, November 26\n\n## Spring 2025 statistics classes\n\n-   STA 230, STA 231 or STA 240: Probability\n\n-   STA 310: Generalized Linear Models\n\n-   STA 323: Statistical Computing\n\n-   STA 360: Bayesian Inference and Modern Statistical Methods\n\n-   STA 432: Theory and Methods of Statistical Learning and Inference\n\n## Computing set up\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load packages\nlibrary(tidyverse)  \nlibrary(tidymodels)  \nlibrary(knitr)       \nlibrary(patchwork)\nlibrary(GGally) #for pairwise plot matrix\n\n\n# set default theme in ggplot2\nggplot2::theme_set(ggplot2::theme_bw())\n```\n:::\n\n\n\n## Topics\n\n-   Multicollinearity\n\n    -   Definition\n\n    -   How it impacts the model\n\n    -   How to detect it\n\n    -   What to do about it\n\n-   Variable transformations\n\n## Data: Trail users {.midi}\n\n-   The Pioneer Valley Planning Commission (PVPC) collected data at the beginning a trail in Florence, MA for ninety days from April 5, 2005 to November 15, 2005 to\n-   Data collectors set up a laser sensor, with breaks in the laser beam recording when a rail-trail user passed the data collection station.\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 √ó 7\n  volume hightemp avgtemp season cloudcover precip day_type\n   <dbl>    <dbl>   <dbl> <chr>       <dbl>  <dbl> <chr>   \n1    501       83    66.5 Summer       7.60  0     Weekday \n2    419       73    61   Summer       6.30  0.290 Weekday \n3    397       74    63   Spring       7.5   0.320 Weekday \n4    385       95    78   Summer       2.60  0     Weekend \n5    200       44    48   Spring      10     0.140 Weekday \n```\n\n\n:::\n:::\n\n\n\nSource: [Pioneer Valley Planning Commission](http://www.fvgreenway.org/pdfs/Northampton-Bikepath-Volume-Counts%20_05_LTA.pdf) via the **mosaicData** package.\n\n## Variables\n\n**Outcome**:\n\n-   `volume` estimated number of trail users that day (number of breaks recorded)\n\n**Predictors**\n\n-   `hightemp` daily high temperature (in degrees Fahrenheit)\n\n-   `avgtemp` average of daily low and daily high temperature (in degrees Fahrenheit)\n\n-   `season` one of ‚ÄúFall‚Äù, ‚ÄúSpring‚Äù, or ‚ÄúSummer‚Äù\n\n-   `precip` measure of precipitation (in inches)\n\n## EDA: Relationship between predictors\n\nWe can create a pairwise plot matrix using the `ggpairs` function from the **GGally** R package\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrail_trail |>\n  select(hightemp, avgtemp, season, precip) |>\n  ggpairs()\n```\n:::\n\n\n\n## EDA: Relationship between predictors {.midi}\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](15-multicollinearity_files/figure-revealjs/unnamed-chunk-4-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n::: question\nWhat might be a potential concern with a model that uses high temperature, average temperature, season, and precipitation to predict volume?\n:::\n\n# Multicollinearity\n\n## Multicollinearity\n\n-   Ideally there is no linear relationship (dependence) between the predictors\n\n    -   This is generally not the case in practice but is often not a major issue\n\n-   **Multicollinearity**: there are near-linear dependencies between predictors\n\n## Common sources of multicollinearity\n\n::: incremental\n-   Dependencies that generally occur in the population\n\n-   How the model is defined and the variables that are included\n\n-   Sample comes from only a subspace of the region of predictors\n\n-   There are more predictor variables than observations\n:::\n\n## Detecting multicollinearity\n\n-   **Variance Inflation Factor (VIF)**: measure of multicollinearity in the regression model\n\n$$\nVIF_j = \\frac{1}{1 - R^2_j}\n$$\n\nwhere $R^2_j$ is the proportion of variation in $x_j$ that is explained by a linear combination of all the other predictors\n\n## Detecting multicollinearity\n\n-   Common practice uses threshold $VIF > 10$ as indication of concerning multicollinearity\n\n-   Variables with similar values of VIF are typically the ones correlated with each other\n\n-   Use the `vif()` function in the **rms** R package to calculate VIF\n\n## Effects of multicollinearity\n\n::: incremental\n-   Large variance $(\\hat{\\sigma}^2_{\\epsilon}(\\mathbf{X}^T\\mathbf{X})^{-1})$ in the model coefficients\n\n    -   Different combinations of coefficient estimates produce equally good model fits\n\n-   Unreliable statistical inference results\n\n    -   May conclude coefficients are not statistically significant when there is, in fact, a relationship between the predictors and response\n\n-   Interpretation of coefficient is no longer \"holding all other variables constant\", since this would be impossible for correlated predictors\n:::\n\n# Application exercise\n\n::: appex\nüìã [sta221-fa24.netlify.app/ae/ae-05-multicollinearity](../ae/ae-05-multicollinearity.html)\n:::\n\nSelected groups - put responses on your [Google slide](https://docs.google.com/presentation/d/1pFjNKtvyMo7rd0RJFVNvJf6UcRVsFnXeW4qWOMNeTdU/edit?usp=sharing).\n\n## Dealing with multicollinearity\n\n::: incremental\n-   Collect more data (often not feasible given practical constraints)\n\n-   Redefine the correlated predictors to keep the information from predictors but eliminate collinearity\n\n    -   e.g., if $x_1, x_2, x_3$ are correlated, use a new variable $(x_1 + x_2) / x_3$ in the model\n\n-   For categorical predictors, avoid using levels with very few observations as the baseline\n\n-   Remove one of the correlated variables\n\n    -   Be careful about substantially reducing predictive power of the model\n:::\n\n# Application exercise\n\n::: appex\nüìã [sta221-fa24.netlify.app/ae/ae-05-multicollinearity](../ae/ae-05-multicollinearity.html)\n:::\n\nSelected groups - put responses on your [Google slide](https://docs.google.com/presentation/d/1pFjNKtvyMo7rd0RJFVNvJf6UcRVsFnXeW4qWOMNeTdU/edit?usp=sharing).\n\n# Variable transformations\n\n## Data: Respiratory Rate vs. Age {.midi}\n\n-   A high respiratory rate can potentially indicate a respiratory infection in children. In order to determine what indicates a \"high\" rate, we first want to understand the relationship between a child's age and their respiratory rate.\n\n-   The data contain the respiratory rate for 618 children ages 15 days to 3 years. It was obtained from the **Sleuth3** R package and is originally form a 1994 publication \"Reference Values for Respiratory Rate in the First 3 Years of Life\".\n\n-   **Variables**:\n\n    -   `Age`: age in months\n    -   `Rate`: respiratory rate (breaths per minute)\n\n## Rate vs. Age\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](15-multicollinearity_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n\n## Model 1: Rate vs. Age\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresp_fit <- lm(Rate ~ Age, data = respiratory)\n\ntidy(resp_fit) |>\n  kable(digits = 3)\n```\n\n::: {.cell-output-display}\n\n\n|term        | estimate| std.error| statistic| p.value|\n|:-----------|--------:|---------:|---------:|-------:|\n|(Intercept) |   47.052|     0.504|    93.317|       0|\n|Age         |   -0.696|     0.029|   -23.684|       0|\n\n\n:::\n:::\n\n\n\n## Model 1: Residuals\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](15-multicollinearity_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n\n## Consider different transformations...\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](15-multicollinearity_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n\n# Transformation on $Y$\n\n## Identifying a need to transform Y\n\n::: incremental\n-   Typically, a ‚Äúfan-shaped‚Äù residual plot indicates the need for a transformation of the response variable Y\n\n    -   There are multiple ways to transform a variable, e.g., Y, 1/Y, log‚Å°(Y)\n\n    -   log‚Å°(Y) the most straightforward to interpret, so we use that transformation when possible\n\n<!-- -->\n\n-   When building a model:\n\n    -   Choose a transformation and build the model on the transformed data\n\n    -   Reassess the residual plots\n\n    -   If the residuals plots did not sufficiently improve, try a new transformation!\n:::\n\n## Log transformation on $Y$\n\n-   If we apply a log transformation to the response variable, we want to estimate the parameters for the statistical model\n\n$$\n\\log(y_i) = \\beta_0+ \\beta_1 x_{i1} + \\dots +\\beta_px_{ip} + \\epsilon_i, \\hspace{10mm} \\epsilon \\sim N(0,\\sigma^2_\\epsilon)\n$$\n\n-   The regression equation is\n\n$$\\widehat{\\log(y_i)} = \\hat{\\beta}_0+ \\hat{\\beta}_1 x_{i1} + \\dots + \\hat{\\beta}_px_{ip}$$\n\n## Log transformation on $Y$\n\nWe want to interpret the model in terms of the original variable $Y$, not $\\log(Y)$, so we need to write the regression equation in terms of $Y$\n\n$$\\begin{align}\\hat{y_i} &= \\exp\\{\\hat{\\beta}_0 + \\hat{\\beta}_1 x_{i1} + \\dots + \\hat{\\beta}_Px_{ip}\\}\\\\ &= \\exp\\{\\hat{\\beta}_0\\}\\exp\\{\\hat{\\beta}_1x_{i1}\\}\\dots\\exp\\{\\hat{\\beta}_px_{ip}\\}\\end{align}$$\n\n::: callout-note\nThe predicted value $\\hat{y_i}$ is the predicted *median* of $Y$. Note, when the distribution of $y_i|x_1, \\ldots, x_p$ is symmetric, then the median equals the mean. (See notes at the end for more details)\n:::\n\n## Model interpretation {.midi}\n\n$$\\begin{align}\\hat{y_i} &= \\exp\\{\\hat{\\beta}_0 + \\hat{\\beta}_1 x_{1p} + \\dots + \\hat{\\beta}_Px_{ip}\\}\\\\ &= \\exp\\{\\hat{\\beta}_0\\}\\exp\\{\\hat{\\beta}_1x_{i1}\\}\\dots\\exp\\{\\hat{\\beta}_px_{ip}\\}\\end{align}$$\n\n. . .\n\n-   **Intercept**: When $x_{i1} = \\dots = x_{ip} =0$, $y_i$ is expected to be $\\exp\\{\\hat{\\beta}_0\\}$\n\n-   **Slope:** For every one unit increase in $x_{ij}$, $y_{i}$ is expected to multiply by a factor of $\\exp\\{\\hat{\\beta}_j\\}$, holding all else constant\n\n::: question\nWhy is the interpretation in terms of a multiplicative change?\n:::\n\n## Model 2: log(Rate) vs. Age\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|term        | estimate| std.error| statistic| p.value|\n|:-----------|--------:|---------:|---------:|-------:|\n|(Intercept) |    3.845|     0.013|   304.500|       0|\n|Age         |   -0.019|     0.001|   -25.839|       0|\n\n\n:::\n:::\n\n\n\n<br>\n\n::: question\n-   Interpret the intercept in terms of (1) `log(Rate)` and (2) `Rate`.\n\n-   Interpret the effect of `Age` in terms of (1) `log(Rate)` and (2) `Rate`.\n:::\n\n## Model 2: Residuals\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](15-multicollinearity_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n\n## Compare residual plots\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](15-multicollinearity_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n\n# Log transformation on a predictor variable\n\n## Log Transformation on $X$\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](15-multicollinearity_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n\nTry a transformation on $X$ if the scatterplot shows some curvature but the variance is constant for all values of $X$\n\n## Rate vs. log(Age)\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](15-multicollinearity_files/figure-revealjs/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n\n\n## Model with Transformation on $X$ {.midi}\n\nSuppose we have the following regression equation:\n\n$$\\hat{y}_i = \\hat{\\beta}_0 + \\hat{\\beta}_1 \\log(x_i)$$\n\n. . .\n\n::: incremental\n-   **Intercept:** When $x_i = 1$ $(\\log(x_i) = 0)$, $y_i$ is expected to be $\\hat{\\beta}_0$ (i.e. the mean of $y_i$ is $\\hat{\\beta}_0$)\n\n-   **Slope:** When $x_i$ is multiplied by a factor of $\\mathbf{C}$, the mean of $y_i$ is expected to increase by $\\hat{\\beta}_1\\log(C)$ units\n\n    -   **Example**: when $x_i$ is multiplied by a factor of 2, $y_i$ is expected to increase by $\\hat{\\beta}_1}\\mathbf{\\log(2)$ units\n:::\n\n## Model 3: Rate vs. log(Age)\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|term        | estimate| std.error| statistic| p.value|\n|:-----------|--------:|---------:|---------:|-------:|\n|(Intercept) |   50.135|     0.632|    79.330|       0|\n|log_age     |   -5.982|     0.263|   -22.781|       0|\n\n\n:::\n:::\n\n\n\n<br>\n\n::: question\nInterpret the slope and intercept in the context of the data.\n:::\n\n## Model 3: Residuals\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](15-multicollinearity_files/figure-revealjs/unnamed-chunk-17-1.png){width=960}\n:::\n:::\n\n\n\n## Choose a model\n\nRecall the goal of the analysis:\n\n*In order to determine what indicates a \"high\" rate, we first want to understand the relationship between a child's age and their respiratory rate.*\n\n<br>\n\n::: question\nWhich is the preferred metric to compare the models - $R^2$ or RMSE?\n:::\n\n## Compare models\n\n\n\n::: {.cell}\n\n:::\n\n\n\n| Rate vs. Age                            | log(Rate) vs. Age                            | Rate vs. log(Age)                            |\n|------------------------|-------------------------|------------------------|\n| 0.477 | 0.52 | 0.457 |\n\n<br>\n\n::: question\nWhich model would you choose?\n:::\n\n## Learn more\n\nSee [Log Transformations in Linear Regression](https://github.com/sta210-sp20/supplemental-notes/blob/master/log-transformations.pdf) for more details about interpreting regression models with log-transformed variables.\n\n## Recap\n\n-   Introduced multicollinearity\n\n    -   Definition\n\n    -   How it impacts the model\n\n    -   How to detect it\n\n    -   What to do about it\n\n-   Introduced variable transformations\n",
    "supporting": [
      "15-multicollinearity_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}