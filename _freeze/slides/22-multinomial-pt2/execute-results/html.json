{
  "hash": "d98591b99334355b3231125d67e8be78",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Multinomial logistic regression\"\nsubtitle: \"Part 2\"\nauthor: \"Prof. Maria Tackett\"\ndate: \"2025-04-08\"\ndate-format: \"MMM DD, YYYY\"\nfooter: \"[ðŸ”— STA 210 - Spring 2025](https://sta210-sp25.netlify.app)\"\nlogo: \"../images/logo.png\"\nformat: \n  revealjs: \n    theme: slides.scss\n    multiplex: false\n    transition: fade\n    slide-number: true\n    incremental: false \n    chalkboard: true\n    include-before: [ '<script type=\"text/x-mathjax-config\">MathJax.Hub.Config({tex2jax: {enableAssistiveMml: false}});</script>']\n  html: \n    output-file: 22-multinomial-pt2-notes.html\nhtml-math-method:\n  method: mathjax\n  url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\nexecute:\n  freeze: auto\n  echo: true\nknitr:\n  opts_chunk: \n    R.options:      \n    width: 200\nbibliography: references.bib\n---\n\n\n\n\n\n\n\n\n## Announcements {.midi}\n\n-   HW 04 due TODAY at 11:59pm\n\n-   Team Feedback (email from TEAMMATES) due Tuesday, April 8 at 11:59pm (check email)\n\n-   Exam 02 - April 17\n\n-   Next project milestone: Draft and peer review in April 21 lab\n\n-   Statistics experience due April 15\n\n## Topics\n\n::: nonincremental\n-   Predictions\n-   Model selection\n-   Checking conditions\n:::\n\n## Computational setup\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# load packages\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(NHANES)\nlibrary(knitr)\nlibrary(patchwork)\nlibrary(colorblindr)\nlibrary(pROC)\nlibrary(Stat2Data)\nlibrary(nnet)\n\n# set default theme and larger font size for ggplot2\nggplot2::theme_set(ggplot2::theme_minimal(base_size = 20))\n```\n:::\n\n\n\n\n## NHANES Data\n\n::: nonincremental\n-   [National Health and Nutrition Examination Survey](https://www.cdc.gov/nchs/nhanes/?CDC_AAref_Val=https://www.cdc.gov/nchs/nhanes/index.htm) is conducted by the National Center for Health Statistics (NCHS).\n-   The goal is to *\"assess the health and nutritional status of adults and children in the United States\".*\n-   This survey includes an interview and a physical examination.\n:::\n\n## Variables\n\n**Goal:** Use a person's age and whether they do regular physical activity to predict their self-reported health rating.\n\n-   Outcome: `HealthGen`: Self-reported rating of participant's health in general. Excellent, Vgood, Good, Fair, or Poor.\n\n-   Predictors:\n\n    -   `Age`: Age at time of screening (in years). Participants 80 or older were recorded as 80.\n    -   `PhysActive`: Participant does moderate to vigorous-intensity sports, fitness or recreational activities.\n\n## The data\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nnhanes_adult <- NHANES |>\n  filter(Age >= 18) |>\n  select(HealthGen, Age, PhysActive, Education) |>\n  drop_na() |>\n  mutate(obs_num = 1:n())\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nglimpse(nhanes_adult)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 6,465\nColumns: 5\n$ HealthGen  <fct> Good, Good, Good, Good, Vgood, Vgood, Vgood, Vgood, Vgood, â€¦\n$ Age        <int> 34, 34, 34, 49, 45, 45, 45, 66, 58, 54, 50, 33, 60, 56, 56,â€¦\n$ PhysActive <fct> No, No, No, No, Yes, Yes, Yes, Yes, Yes, Yes, Yes, No, No, â€¦\n$ Education  <fct> High School, High School, High School, Some College, Collegâ€¦\n$ obs_num    <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, â€¦\n```\n\n\n:::\n:::\n\n\n\n\n## Model in R\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(nnet)\nhealth_fit <- multinom(HealthGen ~ Age + PhysActive, \n                     data = nhanes_adult)\n```\n:::\n\n\n\n\n## Model summary {.small}\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntidy(health_fit) |> kable(digits = 3)\n```\n\n::: {.cell-output-display}\n\n\n|y.level |term          | estimate| std.error| statistic| p.value|\n|:-------|:-------------|--------:|---------:|---------:|-------:|\n|Vgood   |(Intercept)   |    1.265|     0.154|     8.235|   0.000|\n|Vgood   |Age           |    0.000|     0.003|    -0.014|   0.989|\n|Vgood   |PhysActiveYes |   -0.332|     0.095|    -3.496|   0.000|\n|Good    |(Intercept)   |    1.989|     0.150|    13.285|   0.000|\n|Good    |Age           |   -0.003|     0.003|    -1.187|   0.235|\n|Good    |PhysActiveYes |   -1.011|     0.092|   -10.979|   0.000|\n|Fair    |(Intercept)   |    1.033|     0.174|     5.938|   0.000|\n|Fair    |Age           |    0.001|     0.003|     0.373|   0.709|\n|Fair    |PhysActiveYes |   -1.662|     0.109|   -15.190|   0.000|\n|Poor    |(Intercept)   |   -1.338|     0.299|    -4.475|   0.000|\n|Poor    |Age           |    0.019|     0.005|     3.827|   0.000|\n|Poor    |PhysActiveYes |   -2.670|     0.236|   -11.308|   0.000|\n\n\n:::\n:::\n\n\n\n\n# Predictions\n\n## Calculating probabilities {.smaller}\n\n-   Suppose the response variable has $K$ categories and $k = 1$ is the baseline category. For categories $2,\\ldots,K$, the probability that the $i^{th}$ observation is in the $j^{th}$ category is\n\n    $$\n    \\hat{\\pi}_{ij} = \\frac{\\exp\\{\\hat{\\beta}_{0j} + \\hat{\\beta}_{1j}x_{i1} + \\dots + \\hat{\\beta}_{pj}x_{ip}\\}}{1 + \\sum\\limits_{k=2}^K \\exp\\{\\hat{\\beta}_{0k} + \\hat{\\beta}_{1k}x_{i1} + \\dots \\hat{\\beta}_{pk}x_{ip}\\}}\n    $$\n\n-   For the baseline category, $k=1$, we calculate the probability $\\hat{\\pi}_{i1}$ as\n\n    $$\n    \\hat{\\pi}_{i1} = 1- \\sum\\limits_{k=2}^K \\hat{\\pi}_{ik}\n    $$\n\n## Predicted probability \n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# compute predicted probabilities \npred_probs <- predict(health_fit, type = \"probs\")\n\n# add to original data \nnhanes_adult <- nhanes_adult |> \n  bind_cols(pred_probs)\n```\n:::\n\n\n\n\n. . .\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 Ã— 7\n     Age PhysActive Excellent Vgood  Good   Fair    Poor\n   <int> <fct>          <dbl> <dbl> <dbl>  <dbl>   <dbl>\n 1    20 Yes           0.151  0.384 0.378 0.0824 0.00404\n 2    26 No            0.0684 0.242 0.462 0.198  0.0297 \n 3    57 No            0.0691 0.244 0.425 0.207  0.0546 \n 4    56 Yes           0.156  0.397 0.350 0.0887 0.00837\n 5    38 Yes           0.154  0.391 0.364 0.0855 0.00582\n 6    52 Yes           0.156  0.395 0.353 0.0880 0.00773\n 7    22 Yes           0.151  0.385 0.377 0.0827 0.00421\n 8    52 Yes           0.156  0.395 0.353 0.0880 0.00773\n 9    22 No            0.0682 0.242 0.466 0.196  0.0274 \n10    32 Yes           0.153  0.389 0.369 0.0845 0.00516\n```\n\n\n:::\n:::\n\n\n\n\n## Actual vs. predicted health rating\n\nFor each observation, the predicted perceived health rating is the category with the highest predicted probability.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# get predicted classes\npred_class <- predict(health_fit, type = \"class\")\n\n# add to original data \nnhanes_adult <- nhanes_adult |> \n  bind_cols(pred_class = pred_class) #save as column named pred_class\n```\n:::\n\n\n\n\n## Confusion matrix\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nnhanes_adult |>\n  conf_mat(HealthGen, pred_class)  |>\n  autoplot(type = \"heatmap\")\n```\n\n::: {.cell-output-display}\n![](22-multinomial-pt2_files/figure-revealjs/unnamed-chunk-11-1.png){fig-align='center' width=90%}\n:::\n:::\n\n\n\n\n## Actual vs. predicted health rating\n\n::: question\nWhy do you think no observations were predicted to have a rating of \"Excellent\", \"Fair\", or \"Poor\"?\n:::\n\n\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\"}\n::: {.cell-output-display}\n![](22-multinomial-pt2_files/figure-revealjs/unnamed-chunk-12-1.png){fig-align='center' width=100%}\n:::\n\n::: {.cell-output-display}\n![](22-multinomial-pt2_files/figure-revealjs/unnamed-chunk-12-2.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n\n## ROC curves\n\nROC curves for multiclass outcomes use a one-vs-all approach: calculate multiple curves, one per level vs.Â all other levels.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nnhanes_adult |> \n  roc_curve(\n    truth = HealthGen, \n    Excellent:Poor\n  ) |> \n  autoplot()\n```\n:::\n\n\n\n\n## Area Under the Curve (AUC)\n\n::::: columns\n::: {.column width=\"50%\"}\n<center>**Average AUC**</center>\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nnhanes_adult |> \n  roc_auc(\n    truth = HealthGen, \n    Excellent:Poor,\n    estimator = \"macro\"\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 Ã— 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 roc_auc macro          0.622\n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n<center>**Average AUC weighted by \\# of observations**</center>\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nnhanes_adult |> \n  roc_auc(\n    truth = HealthGen, \n    Excellent:Poor,\n    estimator = \"macro_weighted\"\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 Ã— 3\n  .metric .estimator     .estimate\n  <chr>   <chr>              <dbl>\n1 roc_auc macro_weighted     0.583\n```\n\n\n:::\n:::\n\n\n\n:::\n:::::\n\n# Application exercise\n\n::: appex\nðŸ“‹ <https://sta210-sp25.netlify.app/ae/ae-11-multinomial.html>\n:::\n\n# Checking conditions for inference\n\n## Conditions for inference\n\nWe want to check the following conditions for inference for the multinomial logistic regression model:\n\n1.  Linearity: Is there a linear relationship between the log-odds and the predictor variables?\n\n2.  Randomness: Was the sample randomly selected? Or can we reasonably treat it as random?\n\n3.  Independence: Are the observations independent?\n\n## Checking linearity\n\nSimilar to logistic regression, we will check linearity by examining empirical logit plots between each level of the response and the quantitative predictor variables.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nnhanes_adult <- nhanes_adult |>\n  mutate(\n    Excellent = factor(if_else(HealthGen == \"Excellent\", \"1\", \"0\")),\n    Vgood = factor(if_else(HealthGen == \"Vgood\", \"1\", \"0\")),\n    Good = factor(if_else(HealthGen == \"Good\", \"1\", \"0\")),\n    Fair = factor(if_else(HealthGen == \"Fair\", \"1\", \"0\")),\n    Poor = factor(if_else(HealthGen == \"Poor\", \"1\", \"0\"))\n  )\n```\n:::\n\n\n\n\n## Checking linearity\n\n\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\"}\n\n```{.r .cell-code}\nemplogitplot1(Excellent ~ Age, data = nhanes_adult, \n              ngroups = 10, main = \"Excellent vs. Age\")\n```\n\n::: {.cell-output-display}\n![](22-multinomial-pt2_files/figure-revealjs/unnamed-chunk-17-1.png){fig-align='center' width=90%}\n:::\n\n```{.r .cell-code}\nemplogitplot1(Vgood ~ Age, data = nhanes_adult, \n              ngroups = 10, main = \"Vgood vs. Age\")\n```\n\n::: {.cell-output-display}\n![](22-multinomial-pt2_files/figure-revealjs/unnamed-chunk-17-2.png){fig-align='center' width=90%}\n:::\n:::\n\n\n\n\n## Checking linearity\n\n\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\"}\n\n```{.r .cell-code}\nemplogitplot1(Good ~ Age, data = nhanes_adult, \n              ngroups = 10, main = \"Good vs. Age\")\n```\n\n::: {.cell-output-display}\n![](22-multinomial-pt2_files/figure-revealjs/unnamed-chunk-18-1.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nemplogitplot1(Fair ~ Age, data = nhanes_adult, \n              ngroups = 10, main = \"Fair vs. Age\")\n```\n\n::: {.cell-output-display}\n![](22-multinomial-pt2_files/figure-revealjs/unnamed-chunk-18-2.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n\n## Checking linearity\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nemplogitplot1(Poor ~ Age, data = nhanes_adult, \n              ngroups = 10, main = \"Poor vs. Age\")\n```\n\n::: {.cell-output-display}\n![](22-multinomial-pt2_files/figure-revealjs/unnamed-chunk-19-1.png){fig-align='center' width=90%}\n:::\n:::\n\n\n\n\n. . .\n\nâœ… The linearity condition is satisfied. There is generally a linear relationship between the empirical logit and the quantitative predictor variable, Age, for each level of the response.\n\n## Checking randomness\n\nWe can check the randomness condition based on the context of the data and how the observations were collected.\n\n-   Was the sample randomly selected?\n\n-   If the sample was not randomly selected, ask whether there is reason to believe the observations in the sample differ systematically from the population of interest.\n\n. . .\n\nâœ… The randomness condition is satisfied. The participants were randomly selected, and thus we do not have reason to believe that the participants in this study differ systematically from adults in the U.S.\n\n## Checking independence\n\nWe can check the independence condition based on the context of the data and how the observations were collected.\n\nIndependence is most often violated if the data were collected over time or there is a strong spatial relationship between the observations.\n\n. . .\n\nâœ… The independence condition is satisfied. The participants were randomly selected, so it is reasonable to conclude that the participants' health and behavior characteristics are independent of one another.\n\n## Recap\n\n-   Predictions\n-   Model selection for inference\n-   Checking conditions for inference\n\n## Full multinomial modeling workflow\n\n-   [juliasilge.com/blog/multinomial-volcano-eruptions](https://juliasilge.com/blog/multinomial-volcano-eruptions/)\n\n-   [juliasilge.com/blog/nber-papers](https://juliasilge.com/blog/nber-papers/)\n",
    "supporting": [
      "22-multinomial-pt2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}