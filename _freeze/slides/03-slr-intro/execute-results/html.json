{
  "hash": "8bb35c404ec7f78177c8c9a99be76f06",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Simple Linear Regression\"\nauthor: \"Prof. Maria Tackett\"\ndate: \"2025-01-16\"\ndate-format: \"MMM DD, YYYY\"\nfooter: \"[ðŸ”— STA 210 - Spring 2025](https://sta210-sp25.netlify.app)\"\nlogo: \"../images/logo.png\"\nformat: \n  revealjs: \n    theme: slides.scss\n    multiplex: false\n    transition: fade\n    slide-number: true\n    incremental: false \n    chalkboard: true\n    include-before: [ '<script type=\"text/x-mathjax-config\">MathJax.Hub.Config({tex2jax: {enableAssistiveMml: false}});</script>']\n  html: \n    output-file: 03-slr-intro-notes.html\nhtml-math-method:\n  method: mathjax\n  url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\nexecute:\n  freeze: auto\n  echo: true\nknitr:\n  opts_chunk: \n    R.options:      \n    width: 200\nbibliography: references.bib\n---\n\n\n\n\n## Announcements\n\n-   No labs or office hours Monday, January 20 - Martin Luther King Jr. Holiday\n-   Introduction to R workshops at Duke library\n    -   [Data wrangling with dplyr](https://duke.libcal.com/event/13664829) - Thu, Jan 16 at 12pm\n    -   [Data visualization with ggplot2](https://duke.libcal.com/event/13660125) - Thu, Jan 23 at 12pm\n\n## Topics\n\n<div>\n\n-   Use simple linear regression to describe the relationship between a quantitative predictor and quantitative response variable.\n\n-   Estimate the slope and intercept of the regression line using the least squares method.\n\n-   Interpret the slope and intercept of the regression line.\n\n-   Predict the response given a value of the predictor variable.\n\n-   Fit linear regression models in R\n\n</div>\n\n## Computation set up\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load packages\nlibrary(tidyverse)       # for data wrangling\nlibrary(tidymodels)      # for modeling\nlibrary(fivethirtyeight) # for the fandango dataset\nlibrary(knitr)          # for formatting tables\n\n# set default theme and larger font size for ggplot2\nggplot2::theme_set(ggplot2::theme_bw(base_size = 16))\n\n# set default figure parameters for knitr\nknitr::opts_chunk$set(\n  fig.width = 8,\n  fig.asp = 0.618,\n  fig.retina = 3,\n  dpi = 300,\n  out.width = \"80%\"\n)\n```\n:::\n\n\n\n\n\n\n# Data\n\n## Movie scores\n\n::::: columns\n::: {.column width=\"70%\"}\n-   Data behind the FiveThirtyEight story [*Be Suspicious Of Online Movie Ratings*](https://fivethirtyeight.com/features/fandango-movies-ratings/)[*, Especially Fandango's*](%22Be%20Suspicious%20Of%20Online%20Movie%20Ratings,%20Especially%20Fandango's%22)\n-   In the **fivethirtyeight** package: [`fandango`](https://fivethirtyeight-r.netlify.app/reference/fandango.html)\n-   Contains every film released in 2014 and 2015 that has at least 30 fan reviews on Fandango, an IMDb score, Rotten Tomatoes critic and user ratings, and Metacritic critic and user scores\n:::\n\n::: {.column width=\"30%\"}\n![](images/02/fandango.png){fig-alt=\"Fandango logo\" width=\"200\"}\n\n![](images/02/imdb.png){fig-alt=\"IMDB logo\" width=\"200\"}\n\n![](images/02/rotten-tomatoes.png){fig-alt=\"Rotten Tomatoes logo\" width=\"200\"}\n\n![](images/02/metacritic.png){fig-alt=\"Metacritic logo\" width=\"200\"}\n:::\n:::::\n\n## Data prep\n\n-   Rename Rotten Tomatoes columns as `critics` and `audience`\n-   Rename the data set as `movie_scores`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovie_scores <- fandango |>\n  rename(critics = rottentomatoes, \n         audience = rottentomatoes_user)\n```\n:::\n\n\n\n\n## Data overview\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(movie_scores)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 146\nColumns: 23\n$ film                       <chr> \"Avengers: Age of Ultron\", \"Cinderella\", \"Aâ€¦\n$ year                       <dbl> 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2â€¦\n$ critics                    <int> 74, 85, 80, 18, 14, 63, 42, 86, 99, 89, 84,â€¦\n$ audience                   <int> 86, 80, 90, 84, 28, 62, 53, 64, 82, 87, 77,â€¦\n$ metacritic                 <int> 66, 67, 64, 22, 29, 50, 53, 81, 81, 80, 71,â€¦\n$ metacritic_user            <dbl> 7.1, 7.5, 8.1, 4.7, 3.4, 6.8, 7.6, 6.8, 8.8â€¦\n$ imdb                       <dbl> 7.8, 7.1, 7.8, 5.4, 5.1, 7.2, 6.9, 6.5, 7.4â€¦\n$ fandango_stars             <dbl> 5.0, 5.0, 5.0, 5.0, 3.5, 4.5, 4.0, 4.0, 4.5â€¦\n$ fandango_ratingvalue       <dbl> 4.5, 4.5, 4.5, 4.5, 3.0, 4.0, 3.5, 3.5, 4.0â€¦\n$ rt_norm                    <dbl> 3.70, 4.25, 4.00, 0.90, 0.70, 3.15, 2.10, 4â€¦\n$ rt_user_norm               <dbl> 4.30, 4.00, 4.50, 4.20, 1.40, 3.10, 2.65, 3â€¦\n$ metacritic_norm            <dbl> 3.30, 3.35, 3.20, 1.10, 1.45, 2.50, 2.65, 4â€¦\n$ metacritic_user_nom        <dbl> 3.55, 3.75, 4.05, 2.35, 1.70, 3.40, 3.80, 3â€¦\n$ imdb_norm                  <dbl> 3.90, 3.55, 3.90, 2.70, 2.55, 3.60, 3.45, 3â€¦\n$ rt_norm_round              <dbl> 3.5, 4.5, 4.0, 1.0, 0.5, 3.0, 2.0, 4.5, 5.0â€¦\n$ rt_user_norm_round         <dbl> 4.5, 4.0, 4.5, 4.0, 1.5, 3.0, 2.5, 3.0, 4.0â€¦\n$ metacritic_norm_round      <dbl> 3.5, 3.5, 3.0, 1.0, 1.5, 2.5, 2.5, 4.0, 4.0â€¦\n$ metacritic_user_norm_round <dbl> 3.5, 4.0, 4.0, 2.5, 1.5, 3.5, 4.0, 3.5, 4.5â€¦\n$ imdb_norm_round            <dbl> 4.0, 3.5, 4.0, 2.5, 2.5, 3.5, 3.5, 3.5, 3.5â€¦\n$ metacritic_user_vote_count <int> 1330, 249, 627, 31, 88, 34, 17, 124, 62, 54â€¦\n$ imdb_user_vote_count       <int> 271107, 65709, 103660, 3136, 19560, 39373, â€¦\n$ fandango_votes             <int> 14846, 12640, 12055, 1793, 1021, 397, 252, â€¦\n$ fandango_difference        <dbl> 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5â€¦\n```\n\n\n:::\n:::\n\n\n\n\n## Movie scores data\n\nThe data set contains the \"Tomatometer\" score (**`critics`**) and audience score (**`audience`**) for 146 movies rated on rottentomatoes.com.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](03-slr-intro_files/figure-revealjs/unnamed-chunk-3-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n\n## Movie ratings data\n\n**Goal**: Fit a line to describe the relationship between the critics score and audience score.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](03-slr-intro_files/figure-revealjs/unnamed-chunk-4-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n\n## Why fit a line?\n\nWe fit a line to accomplish one or both of the following:\n\n. . .\n\n::: {style=\"color: #799100\"}\n**Prediction**\n:::\n\nWhat is the audience score expected to be for an upcoming movie that received 35% from the critics?\\\n\n. . .\n\n::: {style=\"color : #799100\"}\n**Inference**\n:::\n\nIs the critics score a useful predictor of the audience score? By how much is the audience score expected to change for each additional point in the critics score?\\\n\n## Terminology\n\n::::: columns\n::: {.column width=\"30%\"}\n-   **Response, *Y***: variable describing the outcome of interest\n\n-   **Predictor, *X***: variable we use to help understand the variability in the response\n:::\n\n::: {.column width=\"70%\"}\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](03-slr-intro_files/figure-revealjs/unnamed-chunk-5-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n:::\n:::::\n\n## Regression model\n\nA **regression model** is a function that describes the relationship between the response, $Y$, and the predictor, $X$.\n\n\\begin{aligned} Y &= \\color{black}{\\textbf{Model}} + \\text{Error} \\\\[8pt]\n&= \\color{black}{\\mathbf{f(X)}} + \\epsilon \\\\[8pt]\n&= \\color{black}{\\mathbf{E(Y|X)}} + \\epsilon \\\\[8pt]\n&= \\color{black}{\\boldsymbol{\\mu_{Y|X}}} + \\epsilon \\end{aligned}\n\n## Regression model\n\n::::: columns\n::: {.column width=\"30%\"}\n\\begin{aligned} Y &= {\\color{purple} \\textbf{Model}} + \\text{Error} \\\\[8pt]\n&= {\\color{purple} \\mathbf{f(X)}} + \\epsilon \\\\[8pt]\n&= {\\color{purple} \\mathbf{E(Y|X)}} + \\epsilon \\\\[8pt]\n&= {\\color{purple} \\boldsymbol{\\mu_{Y|X}}} + \\epsilon \\end{aligned}\n:::\n\n::: {.column width=\"70%\"}\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](03-slr-intro_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n:::\n:::::\n\n$\\mu_{Y|X}$ is the mean value of $Y$ given a particular value of $X$.\n\n## Regression model\n\n::::: columns\n::: {.column width=\"30%\"}\n$$\n\\begin{aligned} Y &= \\color{purple}{\\textbf{Model}} + \\color{blue}{\\textbf{Error}} \\\\[8pt]\n&= \\color{purple}{\\mathbf{f(X)}} + \\color{blue}{\\boldsymbol{\\epsilon}} \\\\[8pt]\n&= \\color{purple}{\\mathbf{E(Y|X)}} + \\color{blue}{\\boldsymbol{\\epsilon}} \\\\[8pt]\n&= \\color{purple}{\\boldsymbol{\\mu_{Y|X}}} + \\color{blue}{\\boldsymbol{\\epsilon}} \\\\[5pt]\n \\end{aligned}\n$$\n:::\n\n::: {.column width=\"70%\"}\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](03-slr-intro_files/figure-revealjs/unnamed-chunk-7-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n:::\n:::::\n\n# Simple linear regression (SLR)\n\n## SLR: Statistical model (Theoretical)\n\nWhen we have a quantitative response, $Y$, and a single quantitative predictor, $X$, we can use a **simple linear regression** model to describe the relationship between $Y$ and $X$.\n\n::: equation\n$$y_i = \\beta_0 + \\beta_1 x_i + \\epsilon_i$$\n:::\n\n. . .\n\n-   $\\beta_1$: True slope of the relationship between $X$ and $Y$\n-   $\\beta_0$: True intercept of the relationship between $X$ and $Y$\n-   $\\epsilon_i$: Error for the $i^{th}$ observation\n\n## SLR: Regression equation (Fitted)\n\n::: equation\n$$\n\\hat{y}_i = \\hat{\\beta}_0 + \\hat{\\beta}_1 x_i\n$$\n:::\n\n-   $\\hat{\\beta}_1$: Estimated slope of the relationship between $X$ and $Y$\n-   $\\hat{\\beta}_0$: Estimated intercept of the relationship between $X$ and $Y$\n-   No error term!\n\n. . .\n\n::: question\nWhy is there no error term in the estimated regression equation?\n:::\n\n## Computing estimates $\\hat{\\beta}_1$ and $\\hat{\\beta}_0$\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](03-slr-intro_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n\n## Residuals\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](03-slr-intro_files/figure-revealjs/unnamed-chunk-9-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n\n$$\\text{residual} = \\text{observed} - \\text{predicted} = y_i - \\hat{y}_i$$\n\n## Least squares line\n\n-   The residual for the $i^{th}$ observation is\n\n$$e_i = \\text{observed} - \\text{predicted}\n= y_i - \\hat{y}_i$$\n\n-   The **sum of squared residuals** is\n\n$$e^2_1 + e^2_2 + \\dots + e^2_n$$\n\n-   The **Ordinary Least Squares (OLS) line** is the one that minimizes the sum of squared residuals\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n## Steps to compute estimate $\\hat{\\beta}_0$\n\n::: aside\n[Click here](https://introregression.netlify.app/98-appendix#sec-least-sq-math) for full details on estimating $\\hat{\\beta}_0$ and $\\hat{\\beta}_1$ for simple linear regression.\n:::\n\n# Slope and intercept\n\n## Properties of least squares regression\n\n::: incremental\n-   The regression line goes through the center of mass point, the coordinates corresponding to average $X$ and average $Y$: $\\hat{\\beta}_0 = \\bar{y} - \\hat{\\beta}_1\\bar{x}$\n\n-   The slope has the same sign as the correlation coefficient: $\\hat{\\beta}_1 = r \\frac{s_Y}{s_X}$\n\n-   The sum of the residuals is approximately zero: $\\sum_{i = 1}^n e_i \\approx 0$\n\n-   The residuals and $X$ values are uncorrelated\n:::\n\n## Estimating the slope\n\n$$\\large{\\hat{\\beta}_1 = r \\frac{s_Y}{s_X}}$$\n\n::::: columns\n::: {.column width=\"50%\"}\n\\begin{aligned} \ns_X &= 30.1688 \\\\\ns_Y &=  20.0244 \\\\\nr &= 0.7814\n\\end{aligned}\n:::\n\n::: {.column width=\"50%\"}\n\\begin{aligned}\n\\hat{\\beta}_1 &= 0.7814 \\times \\frac{20.0244}{30.1688} \\\\\n&= 0.5187\\end{aligned}\n:::\n:::::\n\n## Estimating the intercept\n\n$$\\large{\\hat{\\beta}_0 = \\bar{Y} - \\hat{\\beta}_1\\bar{X}}$$\n\n::::: columns\n::: {.column width=\"50%\"}\n\\begin{aligned}\n&\\bar{x} = 60.8493 \\\\\n&\\bar{y} = 63.8767 \\\\\n&\\hat{\\beta}_1 = 0.5187\n\\end{aligned}\n:::\n\n::: {.column width=\"50%\"}\n\\begin{aligned}\\hat{\\beta}_0 &= 63.8767 - 0.5187 \\times 60.8493 \\\\\n&= 32.3142\n\\end{aligned}\n:::\n:::::\n\n## Interpretation\n\n$$\n\\widehat{\\text{audience}} = 32.3142 + 0.5187 \\times \\text{critics}\n$$\n\n::: appex\nAnswer the following questions on Ed Discussion:\n\n-   The slope of the model for predicting audience score from critics score is 0.5187 . Which of the following is the best interpretation of this value?\n\n-   32.3142 is the predicted mean audience score for what type of movies?\n\nðŸ”— <https://edstem.org/us/courses/70992/discussion/5978732>\n:::\n\n## Does it make sense to interpret the intercept?\n\n. . .\n\nâœ… **The intercept is meaningful in the context of the data if**\n\n-   the predictor can feasibly take values equal to or near zero, or\n\n-   there are values near zero in the observed data.\n\n. . .\n\nðŸ›‘ Otherwise, the intercept may not be meaningful!\n\n# Prediction\n\n## Making a prediction\n\nSuppose that a movie has a critics score of 70. According to this model, what is the movie's predicted audience score?\n\n\\begin{aligned}\n\\widehat{\\text{audience}} &= 32.3142 + 0.5187 \\times \\text{critics} \\\\\n&= 32.3142 + 0.5187 \\times 70 \\\\\n&= 68.6232\n\\end{aligned}\n\n<br>\n\n. . .\n\n::: callout-caution\nUsing the model to predict for values outside the range of the original data is **extrapolation.** Why do we want to avoid extrapolation?\n:::\n\n# Linear regression in R\n\n## Fit the model\n\nUse the `lm()` function to fit a linear regression model\n\n<br>\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovie_fit <- lm(audience ~ critics, data = movie_scores)\nmovie_fit\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = audience ~ critics, data = movie_scores)\n\nCoefficients:\n(Intercept)      critics  \n    32.3155       0.5187  \n```\n\n\n:::\n:::\n\n\n\n\n## Tidy results\n\nUse the `tidy()` function from the **broom** R package to \"tidy\" the model output\n\n<br>\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|2\"}\nmovie_fit <- lm(audience ~ critics, data = movie_scores)\ntidy(movie_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 Ã— 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)   32.3      2.34        13.8 4.03e-28\n2 critics        0.519    0.0345      15.0 2.70e-31\n```\n\n\n:::\n:::\n\n\n\n\n## Format results\n\nUse the `kable()` function from the **knitr** package to neatly format the results\n\n<br>\n\n<div>\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|2,3\"}\nmovie_fit <- lm(audience ~ critics, data = movie_scores)\ntidy(movie_fit) |>\n  kable(digits = 3)\n```\n\n::: {.cell-output-display}\n\n\n|term        | estimate| std.error| statistic| p.value|\n|:-----------|--------:|---------:|---------:|-------:|\n|(Intercept) |   32.316|     2.343|    13.795|       0|\n|critics     |    0.519|     0.035|    15.028|       0|\n\n\n:::\n:::\n\n\n\n\n</div>\n\n## Prediction\n\nUse the `predict()` function to calculate predictions for new observations\n\n<br>\n\n**Single observation**\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnew_movie <- tibble(critics = 70)\npredict(movie_fit, new_movie)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       1 \n68.62297 \n```\n\n\n:::\n:::\n\n\n\n\n## Prediction\n\nUse the `predict()` function to calculate predictions for new observations\n\n<br>\n\n**Multiple observations**\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmore_new_movies <- tibble(critics = c(24,70, 85))\npredict(movie_fit, more_new_movies)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       1        2        3 \n44.76379 68.62297 76.40313 \n```\n\n\n:::\n:::\n\n\n\n\n# Application exercise\n\n::: appex\nðŸ“‹ <https://sta210-sp25.netlify.app/ae/ae-03-slr.html>\n:::\n\n-   Find your `ae-03` repo in the course GitHub organization.\n\n-   If you do not see an `ae-03` repo, use the link to create one: <https://classroom.github.com/a/jxxCTVVo>\n\n## Recap\n\n<div>\n\n-   Used simple linear regression to describe the relationship between a quantitative predictor and quantitative response variable.\n\n-   Used the least squares method to estimate the slope and intercept.\n\n-   Interpreted the slope and intercept.\n\n-   Predicted the response given a value of the predictor variable.\n\n-   Used R to fit the regression line and calculate predictions\n\n</div>\n\n## For next class\n\n-   Prepare for [Lecture 04: Inference for simple linear regression](../prepare/prepare-lec04.html)\n",
    "supporting": [
      "03-slr-intro_files/figure-revealjs"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}