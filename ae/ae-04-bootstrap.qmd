---
title: "AE 04: Bootstrap confidence intervals"
subtitle: "Houses in Duke Forest"
date: "Sep 11, 2023"
editor: visual
---

::: callout-important
Go to the [course GitHub organization](https://github.com/sta210-fa23) and locate your `ae-04` repo to get started.

Render, commit, and push your responses to GitHub by the end of class. The responses are due in your GitHub repo no later than Thursday, September 14 at 11:59pm.
:::

```{r load-packages}
#| message: false
library(tidyverse)
library(tidymodels)
library(openintro)
library(knitr)
```

## Data

The data are on houses that were sold in the Duke Forest neighborhood of Durham, NC around November 2020. It was originally scraped from Zillow, and can be found in the `duke_forest` data set in the **openintro** R package.

```{r glimpse-data}
glimpse(duke_forest)
```

## Exploratory data analysis

```{r scatterplot}
ggplot(duke_forest, aes(x = area, y = price)) +
  geom_point(alpha = 0.7) +
  labs(
    x = "Area (square feet)",
    y = "Sale price (USD)",
    title = "Price and area of houses in Duke Forest"
  ) +
  scale_y_continuous(labels = label_dollar()) 
```

## Model

```{r fit-model}
df_fit <- linear_reg() |>
  set_engine("lm") |>
  fit(price ~ area, data = duke_forest)

tidy(df_fit) |>
  kable(digits = 2)
```

## Bootstrap confidence interval

### 1. Calculate the observed fit (slope)

```{r observed-fit}

observed_fit <- duke_forest |>
  specify(price ~ area) |>
  fit()

observed_fit
```

### 2. Take *n* bootstrap samples and fit models to each one.

Fill in the code, then set `eval: true` .

```{r bootstrap}
#| eval: false

n = 100
set.seed(091222)

boot_fits <- ______ |>
  specify(______) |>
  generate(reps = ____, type = "bootstrap") |>
  fit()

boot_fits
```

-   Why do we set a seed before taking the bootstrap samples?

-   Make a histogram of the bootstrap samples to visualize the bootstrap distribution.

    ```{r boot-hist}
    # Code for histogram
    ```

### 3. Compute the 95% confidence interval as the middle 95% of the bootstrap distribution

Fill in the code, then set `eval: true` .

```{r calc-ci}
#| eval: false

get_confidence_interval(
  boot_fits, 
  point_estimate = _____, 
  level = ____,
  type = "percentile"
)
```

## Changing confidence level

### Modify the code from Step 3 to create a 90% confidence interval.

```{r 90-ci}
# Paste code for 90% confidence interval
```

### Modify the code from Step 3 to create a 99% confidence interval.

```{r 99-ci}
# Paste code for 90% confidence interval
```

-   Which confidence level produces the most accurate confidence interval (90%, 95%, 99%)? Explain

-   Which confidence level produces the most precise confidence interval (90%, 95%, 99%)? Explain

-   If we want to be very certain that we capture the population parameter, should we use a wider or a narrower interval? What drawbacks are associated with using a wider interval?

::: callout-important
To submit the AE:

-   Render the document to produce the PDF with all of your work from today's class.

-   Push all your work to your `ae-04` repo on GitHub. (You do not submit AEs on Gradescope).
:::
